group 'yurius'
version '1.0-SNAPSHOT'

apply plugin: 'java'
//apply plugin: 'war'
//apply plugin: 'jetty'

defaultTasks 'run'

sourceCompatibility = 1.8

repositories {
    mavenCentral()
}

configurations {
    integrationTestCompile.extendsFrom testCompile
    integrationTestRuntime.extendsFrom testRuntime
}

sourceSets {
    integrationTest {
        java {
            compileClasspath += main.output + test.output
            runtimeClasspath += main.output + test.output
            srcDir file('src/integration-test/java')
        }
        resources.srcDir file('src/integration-test/resources')
    }
}

dependencies {
    compile 'org.glassfish.jersey.core:jersey-server:2.22.1'
    compile 'org.glassfish.jersey.containers:jersey-container-servlet:2.22.1'
    compile 'org.glassfish.jersey.media:jersey-media-moxy:2.22.1'

    compile 'org.eclipse.jetty:jetty-server:9.3.7.v20160115'
    compile 'org.eclipse.jetty:jetty-servlet:9.3.7.v20160115'
    compile 'org.eclipse.jetty:jetty-webapp:9.3.7.v20160115'

    testCompile 'junit:junit:4.12'
    testCompile 'org.hamcrest:hamcrest-all:1.3'
    testCompile 'org.glassfish.jersey.test-framework:jersey-test-framework-core:2.22.1'
    testCompile 'org.glassfish.jersey.test-framework.providers:jersey-test-framework-provider-grizzly2:2.22.1'
}

task integrationTest(type: Test) {
    testClassesDir = sourceSets.integrationTest.output.classesDir
    classpath = sourceSets.integrationTest.runtimeClasspath
    // always run integration tests
    outputs.upToDateWhen { false }
}

check.dependsOn integrationTest
integrationTest.mustRunAfter test

tasks.withType(Test) {
    reports.html.destination = file("${reporting.baseDir}/${name}")
}

task(run, dependsOn: 'classes', type: JavaExec) {
            main = 'yurius.game.GameLauncher'
            classpath = sourceSets.main.runtimeClasspath
}

